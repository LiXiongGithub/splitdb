#spring.datasource.url=jdbc:mysql://localhost:3306/ds?characterEncoding=utf8&allowMultiQueries=true&useSSL=false
#spring.datasource.username=root
#spring.datasource.password=123
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver

mybatis.mapperLocations=classpath:mapper/**/*.xml
mybatis.configLocation=classpath:mybatis-config.xml
mybatis.type-aliases-package=com.lx.splitdb.splitdb.entity

#log
logging.file=log/log.log
#logging.level.root=debug
logging.level.com.howie.shiro.mapper=DEBUG
logging.level.org.springframework.web=DEBUG

#分库分表数据源配置
spring.shardingsphere.datasource.names=ds0,ds1

spring.shardingsphere.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds0.url=jdbc:mysql://localhost:3306/ds0
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=123

spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://localhost:3306/ds1
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=123

##----------------------------user表的分库配置--------------------------------##
#库的分片策略，根据表的id，对2取余数,???那张表的id
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds$->{id % 2}

#是否设置广播的形式，所有的分库都会插入数据，不设置默认为根据策略存入不同的库的形式
#spring.shardingsphere.sharding.broadcast-tables=user


#设置user表的分表策略，指定0，1数据源，
spring.shardingsphere.sharding.tables.user.actual-data-nodes=ds$->{0..1}.user
spring.shardingsphere.sharding.tables.user.key-generator.column=id
spring.shardingsphere.sharding.tables.user.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.tables.user.key-generator.props.worker.id=33
##----------------------------user表的分库配置--------------------------------##


##----------------------------score_id表的分库配置--------------------------------##
#库的分片策略，根据表的id，对2取余数,
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=score_id
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds$->{score_id % 2}
#设置score表的分表策略，指定0，1数据源，
spring.shardingsphere.sharding.tables.score.actual-data-nodes=ds$->{0..1}.score
spring.shardingsphere.sharding.tables.score.key-generator.column=score_id
spring.shardingsphere.sharding.tables.score.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.tables.score.key-generator.props.worker.id=33
##----------------------------score_id表的分库配置--------------------------------##


